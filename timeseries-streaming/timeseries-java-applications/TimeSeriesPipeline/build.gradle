/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
    }
}

plugins {
    id 'java'
    id 'idea'
    id "com.google.protobuf" version "0.8.12"
    id "com.diffplug.gradle.spotless" version "3.24.2"
//    id "com.github.spotbugs" version "4.4.4"
}

sourceCompatibility = 1.8

protobuf {
    generatedFilesBaseDir = "$projectDir/build"
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

repositories {
    mavenCentral()
}

// Enable code formatting
spotless {
    java {
        licenseHeaderFile '../Apache_Licence_For_Spotless'
        googleJavaFormat('1.7')
    }
}

//spotbugs {
//    ignoreFailures = true
//}

//tasks.matching {task -> task.name.startsWith('spotbugs')}.forEach {
//    it.reports {
//        html.enabled = true
//        xml.enabled = false
//    }
//}

dependencies {

    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    compile group: 'org.apache.beam', name: 'beam-sdks-java-core', version: "${beamVersion}"
    compile group: 'org.apache.beam', name: 'beam-sdks-java-io-google-cloud-platform', version:"${beamVersion}"
    compile group: 'org.apache.beam', name: 'beam-runners-portability-java', version: '2.22.0'
    compile group: 'org.apache.beam', name: 'beam-runners-google-cloud-dataflow-java', version:  "${beamVersion}"
    compile group: 'org.tensorflow', name: 'tensorflow', version: '1.15.0'
    compile group: 'org.tensorflow', name: 'proto', version: '1.15.0'
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.7'

    compile             "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

    testCompile group: 'org.apache.beam', name: 'beam-runners-direct-java', version: "${beamVersion}"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    testCompileOnly             "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    testAnnotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

}

configurations {
    testArtifacts.extendsFrom testCompile
}
task testJar(type: Jar) {
    classifier "test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}

task scalability_1D_100M_1K_1FS_60SW(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.google.dataflow.sample.timeseriesflow.test.SnapShotScalability_1D_100M_1K_1FW_60SW"
    group = "scalability"
}

task scalability_1D_100M_1K_1FS_60SW_withTFExampleSerlization(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.google.dataflow.sample.timeseriesflow.test.SnapShotScalability_1D_100M_1K_1FW_60SW_withTFExampleSerlization"
    group = "scalability"
}

task scalability_1D_100M_100K_1FS_60SW_withTFExampleSerlization(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.google.dataflow.sample.timeseriesflow.test.SnapShotScalability_1D_100M_100K_1FW_60SW_withTFExampleSerlization"
    group = "scalability"
}
